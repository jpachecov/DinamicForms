package mx.ine.observadoresINE.bo.impl;

import java.util.List;

import javax.enterprise.context.SessionScoped;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import mx.ine.common.fechas.impl.ValidacionFechas;
import mx.ine.observadoresINE.dto.DTOFiltroReporteAcciones;
import mx.ine.observadoresINE.dto.DTOReportesParametros;
import mx.org.ine.servicios.query.QRYContainerInterface;

/**
 * Bussines Object para el reporte ACCIONES DE PROMOCION
 * 
 * @author jpachecov
 *
 */
@Component("boReporteAcciones")
@Scope("prototype")
public class BOReporteAcciones {

	private final String base_query_name = "query_reporte_acciones_promocion";
	
	/**
	 * Contenedor de queries.
	 */
	@Autowired
	@Qualifier("qryContainer")
	@SessionScoped
	private QRYContainerInterface qryContainer;
	
	/**
	 * Método que devuelve el query construido dependiendo de los parámetros o
	 * filtros dados.
	 * 
	 * @param datos
	 * @return
	 */
	public String getQuery(DTOFiltroReporteAcciones datos) {
		String query = "";

		switch (datos.getNivel()) {
		case "OC":
			if (datos.getTipoReporte().equals("L")) {

				break;
			}
			break;
		case "JL":
			if (datos.getTipoReporte().equals("L")) {

				break;
			}
			break;
		case "JD":
			// No hay concentrado
			// Solo listado
			query = qryContainer.getQuery(base_query_name + "_JD");
			query = asignaParametros(datos, query);
			break;
		}

		return query;
	}

	/**
	 * Devuelve un objeto del tipo DTOREportesParametros que servirá para
	 * visualizar la tabla.
	 * 
	 * @param data.
	 *            La lista de registros del reporte.
	 * @return
	 */
	public DTOReportesParametros createTableParameters(List<Object[]> data) {
		return null;
	}
	
	private String asignaParametros(DTOFiltroReporteAcciones datos, String query){

		switch (datos.getNivel()) {
		case "OC":
			if (datos.getTipoReporte().equals("L")) {

				break;
			}
			break;
		case "JL":
			if (datos.getTipoReporte().equals("L")) {

				break;
			}
			break;
		case "JD":
			
			String fecha_ini = ValidacionFechas.dateToString("dd/MM/yyyy", datos.getFechaIni());
			String fecha_fin = ValidacionFechas.dateToString("dd/MM/yyyy", datos.getFechaFin());
			query.replace(":PROCESO", datos.getUsuario().getIdProcesoElectoral() + "");
			query.replace(":DETALLE", datos.getUsuario().getIdDetalleProceso() + "");
			query.replace(":ESTADO", datos.getUsuario().getIdEstadoSeleccionado() + "");
			query.replace(":DISTRITO", datos.getUsuario().getIdDistritoSeleccionado() + "");
			query.replace(":FECHA_MIN", fecha_ini);
			query.replace(":FECHA_MAX", fecha_fin);
			break;
		}

		return query;
	}

}
