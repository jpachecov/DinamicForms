#---------------------------------------------------------------------------------
# 							            QUERYS
#
# Contiene los querys que se utilizaran en cada modulo o de manera general
# 
# Nomenclatura query: query_"modulo al que pertenece"_"nombre del query"
#
# Ejemplo: query_administracionUsuarios_todo = Select * FROM usuarios.
#---------------------------------------------------------------------------------


query_admonIndicadoresAnio_indicadoresDisponiblesRecurrentes 				= SELECT * FROM (SELECT row_.*, rownum rownum_ FROM (SELECT idIndicador, idProceso, idSubProceso, "nombre" as nombre, "proceso.etiqueta" as procesoEtiqueta, "subProceso.etiqueta" as subProcesoEtiqueta, "nivelPrivacidad.etiqueta" as nivelPrivacidadEtiqueta, habilitado FROM ( SELECT idIndicador, idProceso, idSubProceso, nombre as "nombre", procesoEtiqueta as "proceso.etiqueta", subProcesoEtiqueta as "subProceso.etiqueta", nivelPrivacidadEtiqueta as "nivelPrivacidad.etiqueta", habilitado FROM ( SELECT COUNT(ANIO) AS TOTAL, INA.ID_INDICADOR AS idIndicador, INA.PROCESO AS idProceso, INA.SUBPROCESO AS idSubProceso, IND.NOMBRE, PRO.ETIQUETA AS procesoEtiqueta, SUB.ETIQUETA AS subProcesoEtiqueta, NP.ETIQUETA AS nivelPrivacidadEtiqueta, ind.habilitado as habilitado FROM PROCESOS PRO, C_NIVELES_PRIVACIDAD NP, INDICADORES IND, INDICADORES_ANIO INA LEFT OUTER JOIN SUBPROCESOS SUB ON INA.SUBPROCESO = SUB.ID_SUBPROCESO AND INA.PROCESO = SUB.ID_PROCESO WHERE ANIO <> :anioConfiguracion AND INA.PROCESO = PRO.ID_PROCESO AND IND.ID_INDICADOR = INA.ID_INDICADOR AND IND.NIVEL_PRIVACIDAD = NP.ID_PRIVACIDAD GROUP BY INA.ID_INDICADOR, IND.NOMBRE, INA.PROCESO, INA.SUBPROCESO, PRO.ETIQUETA, SUB.ETIQUETA, NP.ETIQUETA, ind.habilitado ) WHERE TOTAL > 1 ) <filtroColumna> <order> ) row_ WHERE rownum <= :maxRows ) WHERE rownum_ > :minRows
query_admin_obtenGruposSistema												= SELECT DISTINCT ID_GRUPO, GRUPOS FROM ADMIN_INE.GRUPOS_SISTEMAS WHERE ID_SISTEMA = :SISTEMA

#				Acreditacion y Gafetes#
query_observadores_nombreLike												= SELECT OBS.nombre ||' ' || OBS.apellido_paterno || ' ' || OBS.apellido_materno AS nombreObservador , id_observador AS IDOBSERVADOR, RUTA_FOTO AS RUTAFOTO, CLAVE_ELECTOR AS CLAVEELECTOR FROM OBSERVADORES OBS LEFT JOIN C_JUSTIFICACIONES JUS ON (OBS.ID_PROCESO_ELECTORAL = JUS.ID_PROCESO_ELECTORAL AND OBS.ID_DETALLE_PROCESO = JUS.ID_DETALLE_PROCESO AND OBS.ID_JUSTIFICACION = JUS.ID_JUSTIFICACION) WHERE OBS.ID_PROCESO_ELECTORAL = :PROCESO AND OBS.ID_DETALLE_PROCESO = :DETALLE AND OBS.ID_ESTADO = :idEstado AND OBS.ID_DISTRITO = :idDistrito AND UPPER(CONCAT(CONCAT(concat(concat(OBS.nombre , ' '), OBS.apellido_paterno),' '), OBS.apellido_materno)) LIKE UPPER( :nombre ) AND JUS.RESULTADO = 4 AND OBS.ID_AGRUPACION IS NULL AND OBS.FOLIO IS NOT NULL
query_observadores_nombreAgrupacionLike										= SELECT JUS.ID_AGRUPACION IDAGRUPACION, JUS.NOMBRE_AGRUPACION NOMBREAGRUPACION FROM OBSERVADORES OBS LEFT JOIN AGRUPACIONES JUS ON OBS.ID_AGRUPACION = JUS.ID_AGRUPACION LEFT OUTER JOIN C_JUSTIFICACIONES JUS ON (OBS.ID_PROCESO_ELECTORAL = JUS.ID_PROCESO_ELECTORAL AND OBS.ID_DETALLE_PROCESO = JUS.ID_DETALLE_PROCESO AND OBS.ID_JUSTIFICACION = JUS.ID_JUSTIFICACION) WHERE OBS.ID_PROCESO_ELECTORAL = :PROCESO AND OBS.ID_DETALLE_PROCESO = :DETALLE AND OBS.ID_ESTADO = :idEstado AND OBS.ID_DISTRITO = :idDistrito AND (UPPER(NOMBRE_AGRUPACION) LIKE UPPER ( :nombre ) OR UPPER(ABREVIATURA) LIKE UPPER( :nombre ) ) AND OBS.FOLIO IS NOT NULL AND JUS.RESULTADO   = 4 GROUP BY JUS.ID_AGRUPACION,   JUS.NOMBRE_AGRUPACION
query_validaConsejeroPresidente												= SELECT  CASE     WHEN PTOS.INICIALES = 'VE' THEN PTOS.INICIALES   || ' Presidente' WHEN PTOS.INICIALES = 'VS' THEN PTOS.INICIALES   || ' Secretario'   END AS INICIALES,   TRAT.ABREVIATURA   ||' '   || TRIM(   CASE     WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(VOC.NOMBRE)   ||' '   || TRIM(VOC.APELLIDO_PATERNO)   ||' '   || TRIM(VOC.APELLIDO_MATERNO) ELSE TRIM(VOC.NOMBRE)   ||' '   || TRIM(VOC.APELLIDO_MATERNO)   END ) AS VOCALPRESIDENTED FROM SESIONES_JUNTA.VOCALES VOC  INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC  ON(VOC.ID_ESTADO    = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO    = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus   = 1)  INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS  ON(PTO_VOC.ID_PUESTO   = PTOS.ID_PUESTO AND PTOS.INICIALES      IN ('VE','VS') AND PTOS.TIPO_PUESTO IN (1,2))  INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT  ON(TRAT.ID_TRATAMIENTO  = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO   = :ID_ESTADO AND VOC.ID_DISTRITO = :ID_DISTRITO
query_validaConsejeroPresidenteGafete										= SELECT PTOS.INICIALES   ||' Presidente' AS INICIALES,   TRAT.ABREVIATURA   ||' '   || TRIM(   CASE     WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(VOC.NOMBRE)   ||' '   || TRIM(VOC.APELLIDO_PATERNO)   ||' '   || TRIM(VOC.APELLIDO_MATERNO) ELSE TRIM(VOC.NOMBRE)   ||' '   || TRIM(VOC.APELLIDO_MATERNO)   END ) AS VOCALPRESIDENTED FROM SESIONES_JUNTA.VOCALES VOC INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC ON(VOC.ID_ESTADO    = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL    = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus in (1,2)) INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS ON(PTO_VOC.ID_PUESTO = PTOS.ID_PUESTO AND PTOS.INICIALES  IN ('VE') AND PTOS.TIPO_PUESTO IN (1,2)) INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT ON(TRAT.ID_TRATAMIENTO = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO    = :ID_ESTADO AND VOC.ID_DISTRITO    = :ID_DISTRITO
query_actualizafechaAcreditacion											= UPDATE Observadores SET FECHA_ACREDITACION = :fechaAcre WHERE  ID_JUSTIFICACION IN (1,2,14,15) <condicion> AND ID_ESTADO = :idEstado AND ID_DISTRITO = :idDistrito AND FECHA_ACREDITACION IS NULL
query_informacion_acreditacionGafete										= SELECT obs.ID_JUSTIFICACION idJustificacion, obs.ID_OBSERVADOR as idOservador, CASE WHEN OBS.fecha_acreditacion != TO_DATE(:fechaexped,'DD/MM/YYYY') THEN 'SI' ELSE 'NO' END AS Acreditado, clave_elector claveelector, obs.sexo sexoObs, CASE WHEN OBS.APELLIDO_PATERNO IS NOT NULL THEN OBS.APELLIDO_PATERNO ELSE ' ' END AS apellidopaterno, CASE WHEN OBS.APELLIDO_MATERNO IS NOT NULL THEN OBS.APELLIDO_MATERNO ELSE ' ' END AS apellidomaterno, sexo, fecha_acreditacion fechaacreditacion, obs.fecha_sesion AS fechasesion, CASE WHEN obs.nombre IS NOT NULL THEN obs.nombre ELSE ' ' END AS nombre, CASE WHEN OBS.FOLIO IS NULL THEN '' ELSE CASE WHEN OBS.ID_DISTRITO = 0 THEN EDOS.ABREVIATURA ||' - ' ||TO_CHAR(OBS.FOLIO, '0000000') ELSE EDOS.ABREVIATURA ||' - ' ||OBS.ID_DISTRITO ||' - ' ||TO_CHAR(OBS.FOLIO, '0000000') END END AS Folio, obs.ruta_foto AS foto, NVL(VOCALPRESIDENTEDISTRITAL.VOCALPRESIDENTED,' ') AS VOCALPRESIDENTED, NVL(VOCALPRESIDENTEESTATAL.VOCALPRESIDENTEE,' ')   AS VOCALPRESIDENTEE, NVL(VOCALSECRETARIODISTRITAL.VOCALSECRETARIOD,' ') AS VOCALSECRETARIOD, NVL(VOCALSECRETARIOESTATAL.VOCALSECRETARIOE,' ')   AS VOCALSECRETARIOE, NVL(VOCALPRESIDENTEDISTRITAL.FOTOVOCALPRESIDENTED,' ') AS FOTOVOCALPRESIDENTED,  NVL(VOCALPRESIDENTEESTATAL.FOTOVOCALPRESIDENTEE,' ')   AS FOTOVOCALPRESIDENTEE,  NVL(VOCALSECRETARIODISTRITAL.FOTOVOCALSECRETARIOD,' ') AS FOTOVOCALSECRETARIOD,  NVL(VOCALSECRETARIOESTATAL.FOTOVOCALSECRETARIOE,' ')   AS FOTOVOCALSECRETARIOE, EDOS.NOMBRE_ESTADO                                 AS nombreestado, obs.id_estado estado, obs.id_distrito distrito FROM OBSERVADORES obs LEFT OUTER JOIN C_JUSTIFICACIONES jus ON (OBS.ID_PROCESO_ELECTORAL = jus.ID_PROCESO_ELECTORAL AND OBS.ID_DETALLE_PROCESO = jus.ID_DETALLE_PROCESO AND obs.id_justificacion = jus.id_justificacion AND jus.resultado = 4) LEFT OUTER JOIN GEOGRAFICO.ESTADOS EDOS ON OBS.ID_ESTADO= EDOS.ID_ESTADO left outer join (SELECT voc.id_estado, voc.fotografia AS FOTOVOCALPRESIDENTED, TRAT.ABREVIATURA ||' ' || TRIM( CASE WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM(upper(VOC.APELLIDO_PATERNO )) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO)) ELSE TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO )) END ) AS VOCALPRESIDENTED FROM SESIONES_JUNTA.VOCALES VOC INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC ON(VOC.ID_ESTADO     = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO  = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL     = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus IN (1,2)) INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS ON(PTO_VOC.ID_PUESTO  = PTOS.ID_PUESTO AND PTOS.INICIALES   IN ('VE') AND PTOS.TIPO_PUESTO IN (1,2)) INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT ON(TRAT.ID_TRATAMIENTO = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO    = :ID_ESTADO AND VOC.ID_DISTRITO    = :ID_DISTRITO ) VOCALPRESIDENTEDISTRITAL on(VOCALPRESIDENTEDISTRITAL.id_estado = OBS.ID_ESTADO) left outer join (SELECT voc.id_estado, voc.fotografia AS FOTOVOCALPRESIDENTEE,TRAT.ABREVIATURA ||' ' || TRIM( CASE WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(upper(VOC.NOMBRE)) ||' ' ||TRIM(upper(VOC.APELLIDO_PATERNO )) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO)) ELSE TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO )) END ) AS VOCALPRESIDENTEE FROM SESIONES_JUNTA.VOCALES VOC INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC ON(VOC.ID_ESTADO     = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO  = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL     = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus IN (1,2)) INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS ON(PTO_VOC.ID_PUESTO  = PTOS.ID_PUESTO AND PTOS.INICIALES   IN ('VE') AND PTOS.TIPO_PUESTO IN (1,2)) INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT ON(TRAT.ID_TRATAMIENTO = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO    = :ID_ESTADO AND VOC.ID_DISTRITO    = 0 ) VOCALPRESIDENTEESTATAL on(VOCALPRESIDENTEESTATAL.id_estado = OBS.ID_ESTADO) left outer join (SELECT  voc.id_estado,  voc.fotografia AS FOTOVOCALSECRETARIOD,TRAT.ABREVIATURA ||' ' || TRIM( CASE WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM((upper(VOC. APELLIDO_PATERNO))) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO)) ELSE TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO )) END ) AS VOCALSECRETARIOD FROM SESIONES_JUNTA.VOCALES VOC INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC ON(VOC.ID_ESTADO     = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO  = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL     = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus IN (1,2)) INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS ON(PTO_VOC.ID_PUESTO  = PTOS.ID_PUESTO AND PTOS.INICIALES   IN ('VS') AND PTOS.TIPO_PUESTO IN (1,2)) INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT ON(TRAT.ID_TRATAMIENTO = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO    = :ID_ESTADO AND VOC.ID_DISTRITO    = :ID_DISTRITO ) VOCALSECRETARIODISTRITAL on(VOCALSECRETARIODISTRITAL.id_estado = OBS.ID_ESTADO) left outer join (SELECT  voc.id_estado, voc.fotografia AS FOTOVOCALSECRETARIOE, TRAT.ABREVIATURA ||' ' || TRIM( CASE WHEN LENGTH(TRIM(COALESCE(VOC.APELLIDO_PATERNO, ' ') ) ) > 0 THEN TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM((upper(VOC. APELLIDO_PATERNO))) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO)) ELSE TRIM(upper(VOC.NOMBRE)) ||' ' || TRIM(upper(VOC.APELLIDO_MATERNO )) END ) AS VOCALSECRETARIOE FROM SESIONES_JUNTA.VOCALES VOC INNER JOIN SESIONES_JUNTA.PUESTOS_VOCALES PTO_VOC ON(VOC.ID_ESTADO     = PTO_VOC.ID_ESTADO AND VOC.ID_DISTRITO  = PTO_VOC.ID_DISTRITO AND VOC.ID_VOCAL     = PTO_VOC.ID_VOCAL AND PTO_VOC.estatus IN (1,2)) INNER JOIN SESIONES_JUNTA.C_PUESTOS PTOS ON(PTO_VOC.ID_PUESTO  = PTOS.ID_PUESTO AND PTOS.INICIALES   IN ('VS') AND PTOS.TIPO_PUESTO IN (1,2)) INNER JOIN SESIONES_JUNTA.C_TRATAMIENTOS TRAT ON(TRAT.ID_TRATAMIENTO = VOC.ID_TRATAMIENTO) WHERE VOC.ID_ESTADO    = :ID_ESTADO AND VOC.ID_DISTRITO    = 0 ) VOCALSECRETARIOESTATAL on(VOCALSECRETARIOESTATAL.id_estado = OBS.ID_ESTADO) WHERE OBS.ID_PROCESO_ELECTORAL = :PROCESO AND OBS.ID_DETALLE_PROCESO = :DETALLE AND  <!COND_NUM_OBSERVADORES> OBS.ID_ESTADO = :ID_ESTADO AND OBS.ID_DISTRITO = :ID_DISTRITO AND obs.folio      IS NOT NULL <!COND_RANGO_FECHAS>
query_observadores_textos												    = SELECT ID_PARRAFO AS idParrafo, ID_TEXTO AS idTexto, DESCRIPCION AS texto FROM C_TEXTOS WHERE ID_PROCESO_ELECTORAL = :PROCESO AND ID_DETALLE_PROCESO = (CASE WHEN (SELECT NVL(COUNT(DESCRIPCION),0) FROM C_TEXTOS WHERE ID_PROCESO_ELECTORAL = :PROCESO AND ID_DETALLE_PROCESO = :DETALLE ) > 0 THEN TO_NUMBER( :DETALLE ) ELSE 0 END) ORDER BY ID_PARRAFO, ID_TEXTO
 
#			Modulo de Solicitudes
query_obten_observador_id  = SELECT     id_proceso_electoral idProcesoElectoral,    id_detalle_proceso idDetalleProceso , id_observador idObservador , \
clave_elector claveElector ,    id_agrupacion idAgupacion,   id_estado idEstado ,    id_distrito idDistrito ,   TO_CHAR(fecha_solicitudes,'dd/mm/yyyy')      fechaSolicitudes, \
nombre,    apellido_paterno apellidoPaterno,    apellido_materno apellidoMaterno, telefono,    telefono_celular telefonoCelular, \
correo_electronico correoElectronico,   fecha_nacimiento    fechaNacimiento,    edad,    sexo,   TO_CHAR(fecha_sesion,'dd/mm/yyyy')      fechaSesion, \
id_evaluacion idEvaluacion,    id_justificacion idJustificacion,    seccion,    folio,    calle, numero_exterior numeroExterior, \
numero_interior numeroInterior,    colonia,    codigo_postal codigoPostal,    id_municipio idMunicipio,    id_estado_domicilio idEstadoDomicilio , \
id_escolaridad idEscolaridad,    id_curso idCurso,    TO_CHAR(fecha_acreditacion,'dd/mm/yyyy')      fechaAcreditacion,    ruta_foto rutaFoto,   \
ratifica  , ORIGEN_SOLICITUD origenSolicitud , lada_telefono ladaTel , LADA_CELULAR ladaCel , extension ,   SIN_NUMERO sinNumero  FROM    observadores    \
where id_proceso_electoral = :idProceso and id_detalle_proceso = :idDetalleProceso and id_observador = :idObservador

query_obten_observador_catalogo_escolaridad = select ID_PROCESO_ELECTORAL  idProcesoElectoral , ID_DETALLE_PROCESO idDetalleProceso  ,ID_ESCOLARIDAD idEscolaridad ,DESCRIPCION from c_escolaridades where ID_PROCESO_ELECTORAL = :idProceso and  ID_DETALLE_PROCESO = :idDetalle

query_obten_observador_catalogo_evaluaciones = select ID_PROCESO_ELECTORAL  idProcesoElectoral , ID_DETALLE_PROCESO idDetalleProceso  ,id_evaluacion idEvaluacion ,DESCRIPCION from C_Evaluacion where ID_PROCESO_ELECTORAL = :idProceso and  ID_DETALLE_PROCESO = :idDetalle

query_obten_observador_catalogo_justificaciones = select ID_PROCESO_ELECTORAL  idProcesoElectoral , ID_DETALLE_PROCESO idDetalleProceso  ,id_justificacion idJustificacion , DESCRIPCION from C_JUSTIFICACIONES where ID_PROCESO_ELECTORAL = :idProceso and  ID_DETALLE_PROCESO = :idDetalle

query_obten_reglas_evaluacion = select ID_PROCESO_ELECTORAL  idProcesoElectoral , ID_DETALLE_PROCESO idDetalleProceso  ,id_evaluacion idEvaluacion , ID_REGLA idRegla from REGLAS_EVALUACION where ID_PROCESO_ELECTORAL = :idProceso and  ID_DETALLE_PROCESO = :idDetalle and id_evaluacion = :idEvaluacion

query_hablita_ratifica =  select count(*) resultado from c_textos where id_proceso_electoral = :idProceso  and id_detalle_proceso = :idDetalle and id_parrafo = -1 and id_texto = -1

query_obten_edad =  SELECT  floor(MONTHS_BETWEEN  (TO_DATE( -fechaActual- ,'dd/MM/yyyy'), TO_DATE( -fechaNacimiento- ,'dd/MM/yyyy') ) / 12) resultado FROM DUAL

query_obten_observador_proceso  = SELECT     id_proceso_electoral idProcesoElectoral,    id_detalle_proceso idDetalleProceso , id_observador idObservador , \
clave_elector claveElector ,    id_agrupacion idAgupacion,   id_estado idEstado ,    id_distrito idDistrito ,  TO_CHAR(fecha_solicitudes,'dd/mm/yyyy')     fechaSolicitudes, \
nombre,    apellido_paterno apellidoPaterno,    apellido_materno apellidoMaterno, telefono,    telefono_celular telefonoCelular, \
correo_electronico correoElectronico,   fecha_nacimiento   fechaNacimiento,    edad,    sexo,   TO_CHAR(fecha_sesion,'dd/mm/yyyy')    fechaSesion, \
id_evaluacion idEvaluacion,    id_justificacion idJustificacion,    seccion,    folio,    calle, numero_exterior numeroExterior, \
numero_interior numeroInterior,    colonia,    codigo_postal codigoPostal,    id_municipio idMunicipio,    id_estado_domicilio idEstadoDomicilio , \
id_escolaridad idEscolaridad,    id_curso idCurso,  TO_CHAR(fecha_acreditacion,'dd/mm/yyyy')       fechaAcreditacion,    ruta_foto rutaFoto,   \
ratifica  , ORIGEN_SOLICITUD origenSolicitud , lada_telefono ladaTel , LADA_CELULAR  ladaCel , extension ,   SIN_NUMERO sinNumero  FROM    observadores    \
where id_proceso_electoral = :idProceso and id_detalle_proceso = :idDetalleProceso

query_obten_cursos_observadores =   select  ID_PROCESO_ELECTORAL idProcesoElectoral, ID_DETALLE_PROCESO idDetalleProceso, ID_CURSO idCurso ,    \
ORIGEN_CURSO origenCurso , TO_CHAR(FECHA,'dd/mm/yyyy')  FECHA   ,  TO_CHAR(HORA_INICIO,'dd/mm/yyyy') horaInicio ,  TO_CHAR(HORA_FIN,'dd/mm/yyyy')  horaFin , OBSERVACIONES  ,  '(' || TO_CHAR(FECHA,'dd/mm/yyyy') || ';' ||    \
 TO_CHAR(HORA_INICIO,'HH24:MI') || '-' ||  TO_CHAR(HORA_FIN,'HH24:MI') || 'hrs.)' etiqueta    \
 from cursos  where id_proceso_electoral = :idProceso and id_detalle_proceso = :idDetalleProceso 
 
 query_existe_observador =  select count(*) resultado from observadores where id_proceso_electoral = :idProceso and id_detalle_proceso = :idDetalleProceso and clave_elector = :clave 


################## CURSOS QUERYS ######################
query_agrupaciones_likeNombreAgrupacion										= select nombre_agrupacion || ' ' || abreviatura as nombreSiglas, id_agrupacion as idAgrupacion, id_agrupacion as idAgrupacionString, nombre_agrupacion AS nombreAgrupacion, abreviatura, id_estado_domicilio as idEstadoDomicilio, nombre, APELLIDO_PATERNO as apellidoPaterno, APELLIDO_MATERNO as apellidoMaterno, calle, NUMERO_EXTERIOR as numeroExterior, NUMERO_INTERIOR as numeroInterior, colonia, CODIGO_POSTAL as codigoPostal, ID_MUNICIPIO as idMunicipio, TELEFONO_01 as telefonoCeroUno, TELEFONO_02 as telefonoCeroDos from agrupaciones  where nombre_agrupacion like :nombre or abreviatura like :nombre
query_domicilio_de_la_junta													= SELECT CALLE as calle, NUMERO_EXTERIOR as numeroExterior, NUMERO_INTERIOR as numeroInterior, COLONIA as colonia, ID_MUNICIPIO as idMunicipioDomicilio, ID_ESTADO as idEstadoDomicilio, CODIGO_POSTAL as codigoPostal FROM SESIONES_JUNTA.DIR_JUNTA_EJECUTIVA WHERE ID_ESTADO = :idEstado AND ID_DISTRITO = :idDistrito

#----------QUERY REPORTES ------------------------------------------------
query_reporte_tablaAgrupaciones                                            = SELECT A.NOMBRE_AGRUPACION || '|' || A.ABREVIATURA || '|' || A.APELLIDO_PATERNO||' '|| A.APELLIDO_MATERNO||' '|| A.NOMBRE ||' |' || A.CALLE||' '||A.NUMERO_EXTERIOR||' '||A.NUMERO_INTERIOR||' ' ||A.COLONIA||' '||A.CODIGO_POSTAL||' '|| D.NOMBRE_MUNICIPIO||' '||D.NOMBRE_ESTADO || '|' || A.TELEFONO_01 || '|'||  A.TELEFONO_02 TABLA FROM AGRUPACIONES A LEFT JOIN (SELECT E.ID_ESTADO,E.NOMBRE_ESTADO,M.ID_MUNICIPIO, M.NOMBRE_MUNICIPIO FROM GEOGRAFICOINE.MUNICIPIOS M INNER JOIN GEOGRAFICOINE.ESTADOS E ON E.ID_ESTADO        = M.ID_ESTADO)D ON (A.ID_MUNICIPIO = D.ID_MUNICIPIO AND A.ID_ESTADO         = D.ID_ESTADO) 
query_reporte_tablaAccionesPromocion                                       = SELECT A.NOMBRE_AGRUPACION || '|' || A.ABREVIATURA || '|' || A.APELLIDO_PATERNO||' '|| A.APELLIDO_MATERNO||' '|| A.NOMBRE || '|' || A.CALLE||' '||A.NUMERO_EXTERIOR||' '||A.NUMERO_INTERIOR||' ' ||A.COLONIA||' '||A.CODIGO_POSTAL||' '|| D.NOMBRE_MUNICIPIO||' '||D.NOMBRE_ESTADO || '|' || A.TELEFONO_01 || '|' || A.TELEFONO_02 TABLA FROM AGRUPACIONES A LEFT JOIN ( SELECT 	E.ID_ESTADO, E.NOMBRE_ESTADO, M.ID_MUNICIPIO, M.NOMBRE_MUNICIPIO FROM GEOGRAFICOINE.MUNICIPIOS M INNER JOIN GEOGRAFICOINE.ESTADOS E ON E.ID_ESTADO = M.ID_ESTADO )D ON (A.ID_MUNICIPIO = D.ID_MUNICIPIO AND A.ID_ESTADO = D.ID_ESTADO) 
query_reporte_tablaCursos                                                  = SELECT A.NOMBRE_AGRUPACION || '|' || A.ABREVIATURA || '|' || A.APELLIDO_PATERNO||' '|| A.APELLIDO_MATERNO||' '|| A.NOMBRE || '|' || A.CALLE||' '||A.NUMERO_EXTERIOR||' '||A.NUMERO_INTERIOR||' ' ||A.COLONIA||' '||A.CODIGO_POSTAL||' '|| D.NOMBRE_MUNICIPIO||' '||D.NOMBRE_ESTADO || '|' || A.TELEFONO_01 || '|' || A.TELEFONO_02 TABLA FROM AGRUPACIONES A LEFT JOIN ( SELECT 	E.ID_ESTADO, E.NOMBRE_ESTADO, M.ID_MUNICIPIO, M.NOMBRE_MUNICIPIO FROM GEOGRAFICOINE.MUNICIPIOS M INNER JOIN GEOGRAFICOINE.ESTADOS E ON E.ID_ESTADO = M.ID_ESTADO )D ON (A.ID_MUNICIPIO = D.ID_MUNICIPIO AND A.ID_ESTADO = D.ID_ESTADO)
query_reporte_tablaObservadores                                            = SELECT A.NOMBRE_AGRUPACION || '|' || A.ABREVIATURA || '|' || A.APELLIDO_PATERNO||' '|| A.APELLIDO_MATERNO||' '|| A.NOMBRE || '|' || A.CALLE||' '||A.NUMERO_EXTERIOR||' '||A.NUMERO_INTERIOR||' ' ||A.COLONIA||' '||A.CODIGO_POSTAL||' '|| D.NOMBRE_MUNICIPIO||' '||D.NOMBRE_ESTADO || '|' || A.TELEFONO_01 || '|' || A.TELEFONO_02 TABLA FROM AGRUPACIONES A LEFT JOIN ( SELECT 	E.ID_ESTADO, E.NOMBRE_ESTADO, M.ID_MUNICIPIO, M.NOMBRE_MUNICIPIO FROM GEOGRAFICOINE.MUNICIPIOS M INNER JOIN GEOGRAFICOINE.ESTADOS E ON E.ID_ESTADO = M.ID_ESTADO )D ON (A.ID_MUNICIPIO = D.ID_MUNICIPIO AND A.ID_ESTADO = D.ID_ESTADO)

query_reporte_agrupaciones		                                           = SELECT A.NOMBRE_AGRUPACION,A.ABREVIATURA,A.APELLIDO_PATERNO||' '|| A.APELLIDO_MATERNO||' '|| A.NOMBRE TITULAR,A.CALLE||' '||A.NUMERO_EXTERIOR||' '||A.NUMERO_INTERIOR||' '||A.COLONIA||' '||A.CODIGO_POSTAL||' '|| D.NOMBRE_MUNICIPIO||' '||D.NOMBRE_ESTADO|| '|'|| A.TELEFONO_01|| '|'|| A.TELEFONO_02 DOMICILIO FROM AGRUPACIONES A LEFT JOIN (SELECT E.ID_ESTADO,E.NOMBRE_ESTADO,M.ID_MUNICIPIO, M.NOMBRE_MUNICIPIO FROM GEOGRAFICOINE.MUNICIPIOS M INNER JOIN GEOGRAFICOINE.ESTADOS E ON E.ID_ESTADO        = M.ID_ESTADO)D ON (A.ID_MUNICIPIO = D.ID_MUNICIPIO AND A.ID_ESTADO         = D.ID_ESTADO)