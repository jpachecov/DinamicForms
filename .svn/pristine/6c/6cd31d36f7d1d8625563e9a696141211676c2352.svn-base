/**
 * @(#)HLPReporteControlObs.java 12/07/2017
 * <p>
 * Copyright (C) 2016 Instituto Nacional Electoral (INE).
 * <p>
 * Todos los derechos reservados.
 */
package mx.ine.observadoresINE.helper;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import mx.ine.observadoresINE.dto.form.FormRepControlObs;

/**
 * @author Helaine Flores Cervantes
 * @since 12/07/2017
 * @copyright Direccion de sistemas - INE
 */
public class HLPReporteControlObs implements Serializable {

    private static final long serialVersionUID = 8895329902895358281L;
    private List<HLPReportesEncabezado> listaEncabezados;
    private Integer columnas;
    /**
     * Constructor
     * @param formFiltros 
     */
    public HLPReporteControlObs(FormRepControlObs formFiltros) {
        switch (formFiltros.getFormatoDeTabla()) {
            case 1:
                crearFormatoDeTablaUno(formFiltros);
                break;
            case 2:
                break;
            case 3:
                break;
        }
    }
    /**
     * Método que crea la tabla presentada en vista con el primer formato
     * @param formFiltros 
     */
    private void crearFormatoDeTablaUno(FormRepControlObs formFiltros) {
        columnas = 23;
        listaEncabezados = new ArrayList<>();
        HLPReportesEncabezado hlpEncabezado = new HLPReportesEncabezado();
        //Primer encabezado
        hlpEncabezado.ingresarEncabezado(0, 1, 3, formFiltros.getPrimerColumna(), 1);
        hlpEncabezado.ingresarEncabezado(1, 1, 3, "Solicitudes", 1);
        hlpEncabezado.ingresarEncabezado(2, 2, 2, "Procedencia", 1);
        hlpEncabezado.ingresarEncabezado(3, 7, 1, "Personas que han tomado curso de capacitación impartido por", 1);
        hlpEncabezado.ingresarEncabezado(4, 3, 2, "Pendientes", 1);
        hlpEncabezado.ingresarEncabezado(5, 3, 2, "Aprobadas", 1);
        hlpEncabezado.ingresarEncabezado(6, 3, 2, "Denegadas / Canceladas", 1);
        hlpEncabezado.ingresarEncabezado(7, 3, 2, "Válidas", 1);
        listaEncabezados.add(hlpEncabezado);

        //Segundo encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(0, 2, 1, "INE", 1);
        hlpEncabezado.ingresarEncabezado(1, 2, 1, "Agrupación", 1);
        hlpEncabezado.ingresarEncabezado(2, 2, 1, "OPLE", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Total", 1);
        listaEncabezados.add(hlpEncabezado);
        //Tercer encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(0, 1, 1, "INE", 1);
        hlpEncabezado.ingresarEncabezado(1, 1, 1, "OPLE", 1);

        hlpEncabezado.ingresarEncabezado(2, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(4, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(5, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(6, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(7, 1, 1, "Cons. Dttales", 1);

        hlpEncabezado.ingresarEncabezado(8, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(9, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(10, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(11, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(12, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(13, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(14, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(15, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(16, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(17, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(18, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(19, 1, 1, "Total", 1);
        listaEncabezados.add(hlpEncabezado);

    }
    /**
     * Método que crea la tabla presentada en vista con el primer formato
     * @param formFiltros 
     */
    private void crearFormatoDeTablaDos(FormRepControlObs formFiltros) {
        HLPReportesEncabezado hlpEncabezado = new HLPReportesEncabezado();
        //Primer encabezado
        hlpEncabezado.ingresarEncabezado(0, 1, 3, formFiltros.getPrimerColumna(), 1);
        hlpEncabezado.ingresarEncabezado(1, 7, 1, "Personas que han tomado curso de capacitación impartido por", 1);
        hlpEncabezado.ingresarEncabezado(2, 3, 2, "Pendientes", 1);
        hlpEncabezado.ingresarEncabezado(3, 3, 2, "Aprobadas", 1);
        hlpEncabezado.ingresarEncabezado(4, 3, 2, "Denegadas / Canceladas", 1);
        hlpEncabezado.ingresarEncabezado(5, 3, 2, "Válidas", 1);
        listaEncabezados.add(hlpEncabezado);

        //Segundo encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(0, 2, 1, "INE", 1);
        hlpEncabezado.ingresarEncabezado(1, 2, 1, "Agrupación", 1);
        hlpEncabezado.ingresarEncabezado(2, 2, 1, "OPLE", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Total", 1);
        listaEncabezados.add(hlpEncabezado);
        //Tercer encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(1, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(2, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(4, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(5, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(6, 1, 1, "Cons. Dttales", 1);

        hlpEncabezado.ingresarEncabezado(7, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(8, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(9, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(10, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(11, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(12, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(13, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(14, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(15, 1, 1, "Total", 1);
        hlpEncabezado.ingresarEncabezado(16, 1, 1, "Cons. Loc", 1);
        hlpEncabezado.ingresarEncabezado(17, 1, 1, "Cons. Dttales", 1);
        hlpEncabezado.ingresarEncabezado(18, 1, 1, "Total", 1);
        listaEncabezados.add(hlpEncabezado);
    }
    /**
     * Método que crea la tabla presentada en vista con el primer formato
     * @param formFiltros 
     */
    private void crearFormatoDeTablaCuatro(FormRepControlObs formFiltros) {
        HLPReportesEncabezado hlpEncabezado = new HLPReportesEncabezado();
        //Primer encabezado
        hlpEncabezado.ingresarEncabezado(0, 1, 2, formFiltros.getPrimerColumna(), 1);
        hlpEncabezado.ingresarEncabezado(1, 4, 1, "Personas que han tomado curso de capacitación impartido por", 1);
        hlpEncabezado.ingresarEncabezado(2, 1, 2, "Pendientes", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Aprobadas", 1);
        hlpEncabezado.ingresarEncabezado(4, 1, 2, "Denegadas / Canceladas", 1);
        hlpEncabezado.ingresarEncabezado(5, 1, 2, "Válidas", 1);
        listaEncabezados.add(hlpEncabezado);

        //Segundo encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(0, 1, 1, "INE", 1);
        hlpEncabezado.ingresarEncabezado(1, 1, 1, "Agrupación", 1);
        hlpEncabezado.ingresarEncabezado(2, 1, 1, "OPLE", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Total", 1);
        listaEncabezados.add(hlpEncabezado);
    }
    /**
     * Método que crea la tabla presentada en vista con el primer formato
     * @param formFiltros 
     */
    private void crearFormatoDeTablaCinco(FormRepControlObs formFiltros) {
        HLPReportesEncabezado hlpEncabezado = new HLPReportesEncabezado();
        //Primer encabezado
        hlpEncabezado.ingresarEncabezado(0, 1, 2, formFiltros.getPrimerColumna(), 1);
        hlpEncabezado.ingresarEncabezado(1, 1, 2, formFiltros.getPrimerColumna(), 1);
        hlpEncabezado.ingresarEncabezado(2, 4, 1, "Personas que han tomado curso de capacitación impartido por", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Pendientes", 1);
        hlpEncabezado.ingresarEncabezado(4, 1, 2, "Aprobadas", 1);
        hlpEncabezado.ingresarEncabezado(5, 1, 2, "Denegadas / Canceladas", 1);
        hlpEncabezado.ingresarEncabezado(6, 1, 2, "Válidas", 1);
        listaEncabezados.add(hlpEncabezado);

        //Segundo encabezado
        hlpEncabezado = new HLPReportesEncabezado();
        hlpEncabezado.ingresarEncabezado(0, 1, 1, "INE", 1);
        hlpEncabezado.ingresarEncabezado(1, 1, 1, "Agrupación", 1);
        hlpEncabezado.ingresarEncabezado(2, 1, 1, "OPLE", 1);
        hlpEncabezado.ingresarEncabezado(3, 1, 2, "Total", 1);
        listaEncabezados.add(hlpEncabezado);
    }

    //******************************GETTERS AND SETTERS**************************//
    public List<HLPReportesEncabezado> getListaEncabezados() {
        return listaEncabezados;
    }

    public void setListaEncabezados(List<HLPReportesEncabezado> listaEncabezados) {
        this.listaEncabezados = listaEncabezados;
    }

    public Integer getColumnas() {
        return columnas;
    }

    public void setColumnas(Integer columnas) {
        this.columnas = columnas;
    }

}
